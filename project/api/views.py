from flask import Blueprint,jsonify,request
from . import db
from .models import User
from .models import Farmer,Orders

import pickle
import pandas as pd
import seaborn as sns
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
from sklearn.preprocessing import LabelEncoder
from datetime import datetime
from sklearn.ensemble import RandomForestRegressor
from sklearn.datasets import make_regression
import joblib

main=Blueprint('main',__name__)

@main.route('/add_user',methods=['POST','GET'])
def add_user():
    user_data=request.get_json(force=True)
    old_user=User.query.filter_by(user=user_data['user']).first()
    if(old_user is None):
        new_user=User(user=user_data['user'],password=user_data['password'],mode=user_data['mode'],phone=user_data['phone'],mail=user_data['mail'])
        db.session.add(new_user)
        db.session.commit()
        return 'Done',201

    else:
        return 'error',404

@main.route('/login',methods=['POST','GET'])
def login():
    user_data=request.get_json(force=True)
    old_user=User.query.filter_by(user=user_data['loguser'],password=user_data['logpass']).first()
    if(old_user is None):
        return 'not_found',404
    else:
        return 'farmer',201

@main.route('/users')
def users():
	users_list=User.query.all()
	users={}
	for use in users_list:
		users[use.user]=use.mode

	return jsonify(users)

@main.route('/phone')
def phone():
    users_list=User.query.all()
    users={}
    for use in users_list:
        users[use.user]={'phone':use.phone,'mail':use.mail,'mode':use.mode}
    return jsonify(users)

@main.route('/add_farmer',methods=['POST','GET'])
def add_farmer():
    farmer_data=request.get_json(force=True)

    new_farmer=Farmer(cname=farmer_data['crop'],cost=farmer_data['cost'],quantity=farmer_data['quantity'],farm=farmer_data['farm'])

    db.session.add(new_farmer)
    db.session.commit()

    return 'Done',201

@main.route('/farmer')
def farmer():
	farmers_list=Farmer.query.all()
	farmers=[]
	for farm in farmers_list:
		farmers.append({'crop':farm.cname,'cost':farm.cost,'quantity':farm.quantity,'farm':farm.farm,'id':farm.id})
	return jsonify(farmers)

@main.route('/add_order',methods=['POST','GET'])
def add_order():
    order_data=request.get_json(force=True)

    new_order=Orders(cname=order_data['cname'],fname=order_data['fname'],cost=order_data['cost'],quantity=order_data['quant'],c_id=order_data['id'],cus_name=order_data['cus_name'])

    db.session.add(new_order)
    db.session.commit()

    return 'Done',201

@main.route('/order')
def order():
    #order_data=request.get_json(force=True)

    newd=Orders.query.all()
    farmers=[]
    for farm in newd:
        farmers.append({'cus_name':farm.cus_name,'fname':farm.fname,'cname':farm.cname,'id':farm.id,'c_id':farm.c_id,'quantity':farm.quantity,'cost':farm.cost})

    return jsonify(farmers)

@main.route('/ml',methods=['POST','GET'])
def ml():
    order_data=request.get_json(force=True)
    #comment the above line to see the results in localhost:5000/ml


    S_name=order_data['State_name']
    dist=order_data['District']
    crop=order_data['Crop_sown']
    season=order_data['Season']
    area=order_data['Area']
    """
    S_name="tamil nadu"
    dist="thanjavur"
    crop="rice"
    season="Kharif"
    area=10
    """    
    data = pd.read_csv(r"./src/components/crop_production.csv")
    data1 = pd.read_csv(r"./src/components/crop_production_modified.csv")
    
    i=-1
    for rows in data['State_Name']:
	    i=i+1
	    if(rows.capitalize().replace(" ","") == S_name.capitalize().replace(" ","")):
		    break

    S_name1=data1['State_Name'][i]

    i=-1
    for rows in data['District_Name']:
	    i=i+1
	    if(rows.capitalize().replace(" ","") == dist.capitalize().replace(" ","")):
		    break

    dist1=data1['District_Name'][i]

    i=-1
    for rows in data['Crop']:
	    i=i+1
	    if(rows.capitalize().replace(" ","") == crop.capitalize().replace(" ","")):
		    break

    crop1=data1['Crop'][i]
    
    i=-1
    for rows in data['Season']:
	    i=i+1
	    if(rows.capitalize().replace(" ","") == season.capitalize().replace(" ","")):
		    break

    season1=data1['Season'][i]
    # Loading the model from the pickle file

    #infile = open("./src/components/crop_model.pkl",'rb')
    #cpl = pickle.load(infile)

    objects = pd.read_pickle(r'./src/components/crop_model.pkl')

    fname = [[S_name1,dist1,2020,crop1,season1,area]]
    #predicting
    op = objects.predict(fname)

    arr = [0, 60.75033823852393, 174.15521285838426, 374.9590857359647, 194.88201055873313, 45.95462316176472, 243.9358469945359, 24.991833333333354, 168.4424572210817, 600.2249096622149, 105.82570552147243, 387.05505952380935, 478.68050209205006, 545.5157389635318, 233.16654004106775, 166.1899106344953, 208.04779749478067, 259.2197339246119, 279.5613738738733, 80.49654320987649, 2433.950357426532, 370.8258461538462, 111.62956989247314, 430.4177310924371, 93.10119935170185, 89.85428748451042, 546.2398389458267, 97.60506024096384, 119.66003210272872, 98.63384219554038, 530.1023001095289, 127.57368421052617, 132.65373134328362, 100.72427509293684, 870.9981514084504, 136.0520216606498, 770.6850101832994, 2422.18615212528, 138.17071428571418, 2957.839487179491, 910.2979367088598, 137.9955529411767, 146.5561844863732, 867.7876200873364, 842.7007281553397, 1116.9525925925918, 940.5724299065431, 1767.4755395683449, 354.35913705583727, 961.087596899225, 638.2053887399466, 710.0422405660377, 1239.7776794258364, 223.17980049875314, 164.98924281984335, 475.6188208616776, 266.4625750000002, 256.44839080459775, 2767.283666666666, 301.9666666666664, 559.2875957120983, 2170.1341807909644, 461.4209792284869, 2171.9062344139643, 2740.6295356037153, 238.86203208556148, 582.096319018405, 294.6888524590166, 457.0083056478404, 1943.0745454545447, 2413.786785714282, 3377.806319702602, 289.9157190635451, 1510.0421926910299, 2527.348684210528, 2227.2529247910857, 347.09128919860603, 261.32207792207765, 1340.6331456953642, 283.4405405405405, 282.14384328358193, 295.2915593220339, 306.7457241379311, 302.6726618705035, 362.03369565217395, 353.1237383177572, 1550.4696750902517, 443.05144486692035, 376.3243445692884, 358.80641025641023, 1912.9763713080167, 1940.3120754717008, 3583.0589211618276, 364.3616858237549, 349.7181395348841, 3087.393430656935, 2039.6647807017557, 423.22070484581496, 1977.1164609053471, 2391.5830769230793, 1110.5068342776174, 523.1356097560973, 403.0027272727273, 337.4017543859649, 1922.0145038167946, 2836.1775193798458, 2314.705116279068, 433.34595652173914, 383.2721461187214, 2097.2423423423443, 1306.3556265356265, 10222.187234042556, 25133.306091370538, 4071.2488000000008, 9753.842475728168, 534.2897727272722, 2845.305936073058, 1647.2803108808298, 14571.61859728506, 459.4782828282827, 621.6016528925616, 5716.808542713567, 3549.686785714286, 5956.4834999999985, 538.132136363636, 8176.550446428581, 7461.498192771084, 4307.404591836731, 495.73272727272735, 579.637278106509, 591.6562539682542, 776.4444444444442, 7234.336645962734, 538.3038202247193, 562.9135416666666, 508.4155440414502, 10065.090740740745, 483.73238636363635, 515.3587500000002, 682.1010471204187, 686.2398882681565, 682.8934131736524, 605.7354878048782, 534.6757763975154, 833.7883561643835, 739.2927918781726, 3784.73157894737, 696.9804232804232, 3967.7454545454534, 544.4232558139533, 1400.0684065934074, 661.7430656934307, 672.4243243243245, 818.9093959731545, 550.5897849462365, 17732.62934782609, 830.3757225433523, 9054.58197674419, 596.2072992700735, 686.9644927536234, 1020.0135951661642, 700.7800000000001, 626.8812500000001, 10637.291666666659, 727.8562091503272, 949.4159090909088, 634.1753164556962, 7092.886013986012, 22734.84962962963, 589.9854961832061, 6343.702621722845, 851.4205673758865, 6168.0915032679795, 739.7088050314466, 1142.466428571428, 1944.1913375796173, 753.9919999999998, 1018.8085271317829, 9394.974306569344, 763.8231343283583, 2811.1510489510492, 2951.1645161290326, 2246.7916666666665, 901.0895104895104, 736.992700729927, 746.7761363636363, 892.374820143885, 11516.626987179505, 815.0836065573769, 1078.0048780487803, 2260.7039215686277, 928.9950413223139, 53290.48529411764, 795.4185430463577, 737.2260504201678, 1861.4194630872482, 14407.519259259252, 17680.121379310345, 15423.846511627902, 1060.2946902654865, 3680.1765472695242, 24123.09410852713, 52960.14772727271, 805.7460176991152, 14840.757575757578, 37657.015789473684, 851.5862595419846, 41167.48157894737, 29230.038399999998, 40337.45545454545, 971.0490494296574, 663.4458715596331, 11267.020967741937, 46242.888785046736, 22879.07622950819, 18942.181428571428, 953.6851304347828, 819.5293577981653, 805.8648000000003, 1241.4707317073169, 4118.548728813559, 959.8805825242719, 52467.9155963303, 40384.49999999998, 1216.4715254237287, 1010.3208633093521, 974.0100800000001, 945.2079646017697, 1693.0981981981984, 44929.16972477064, 1327.7233201581034, 1696.2378640776699, 591.9367924528299, 800.1760683760685, 1015.32, 821.9419117647061, 21376.073214285716, 1150.8707865168535, 1016.2917355371899, 632.7999999999995, 1227.2317972350236, 1060.89797979798, 881.9115384615384, 1249.52688172043, 971.933, 1310.4704347826084, 1071.3952380952383, 1183.4163461538453, 781.4476190476189, 859.6508928571429, 6744.156031128404, 26183.446315789464, 1704.3930232558141, 1442.0663461538459, 683.4340909090911, 1135.541353383459, 885.9087719298246, 1563.8023622047244, 1107.0582524271845, 1141.4011904761903, 1054.9497584541068, 741.3633663366335, 1527.177083333333, 811.2126436781609, 964.5468749999995, 6595.057657657657, 1146.7522123893807, 1086.9172727272726, 1334.6781355932208, 1060.4444444444443, 890.8413461538464, 65180.42708333332, 1138.0486842105263, 1045.9913043478261, 21150.0, 1077.9611111111112, 1535.8846846846845, 1431.741573033708, 1473.1780219780221, 989.2692913385835, 21397.273395348835, 1325.6583333333333, 10290.57878787879, 1157.7341176470588, 80609.0042105263, 50335.659374999996, 54644.00249999999, 36853.31123595506, 88495.9909090909, 1505.4711111111108, 25957.43918918919, 1177.7150943396227, 1250.5317307692308, 59524.321111111116, 1309.6597701149426, 16420.34959349593, 1429.071717171717, 45002.70107526882, 57320.39770114942, 1072.2197368421055, 1672.881840591618, 1204.6510869565225, 1121.264893617022, 71848.84782608693, 1470.0493975903614, 1488.1742056074766, 2370.769230769231, 40172.481052631585, 1224.9150000000002, 48645.91794871795, 1246.857291666667, 1224.198666666666, 32014.008333333328, 41616.629487179496, 1132.7913580246914, 45604.426126126134, 1071.2433333333333, 73193.43333333328, 35373.27023809524, 48141.95294117648, 1517.1967948717947, 807.4888888888889, 1863.2082191780823, 106640.51341463422, 1561.094999999999, 50386.81416666668, 2122.180882352941, 2351.518823529412, 1452.982894736842, 1461.0463157894733, 98169.52894736847, 24015.670512820518, 1696.5355555555554, 1204.3657894736841, 2096.350793650793, 22844.49340659341, 865.0103896103894, 1537.9265822784807, 1375.321951219512, 1346.215189873418, 1494.4994047619052, 35803.940259740244, 1192.4128205128202, 1642.942857142857, 32034.494749999994, 47766.878787878784, 2243.428571428572, 2206.535277777778, 1811.7300000000005, 1282.8910447761186, 44081.56803652971, 1206.1469696969698, 2550.7388059701484, 2037.2921875000002, 1471.5421875, 59942.561643835616, 1830.7369230769234, 1639.2262499999997, 1833.9958333333334, 47996.872222222206, 1484.063461538461, 2371.2707317073177, 1555.992, 1641.1186440677964, 1791.3345454545458, 1728.3666666666666, 1626.4260273972604, 1668.5911764705882, 1218.9222222222224, 1808.5333333333333, 13478.239097744354, 1159.1703124999995, 59702.857142857145, 2475.3579710144923, 2086.66582278481, 1942.851898734177, 1814.3868421052634, 1556.2057692307694, 1154.835820895522, 1068.1071428571424, 121985.09253731358, 2097.2906666666663, 2349.8318840579695, 37189.13235294117, 1978.568421052632, 43236.26461538461, 2479.7571428571423, 1465.6428571428576, 1010.7931034482762, 1322.5185714285715, 1188.3682926829272, 21891.19014084508, 1318.2666666666667, 1780.080821917808, 28819.271999999986, 1372.2104651162792, 55180.535714285725, 822.1087719298245, 3024.756, 62556.78108108108, 1544.2065708418868, 40465.13088235296, 31197.378260869566, 3429.242372881356, 1484.0732142857144, 1717.8698630136985, 1902.8030303030307, 1733.6944444444443, 25383.12089552239, 2543.9676923076922, 17535.117808219184, 1968.0915254237286, 1444.1847457627118, 2512.5442622950823, 1420.5966101694914, 51568.05074626865, 78585.87000000002, 2426.3244897959194, 1575.801724137931, 796.5035714285715, 2566.4111111111106, 2504.8350000000005, 75500.48387096774, 1944.7642857142857, 1639.1836734693877, 3295.576811594203, 1387.7353846153846, 2171.8018518518516, 3349.8666666666672, 1348.4135593220335, 1481.084210526315, 3290.5394444444446, 1347.6061538461538, 2463.408620689656, 1760.4259090909088, 20373.095945945952, 1640.4086206896554, 1194.2444444444448, 1987.5846153846157, 1310.057627118644, 2067.6522727272736, 1597.449534883721, 1070.0403225806451, 799.8844827586205, 1629.9782608695652, 2257.3755102040823, 1466.0706896551728, 3104.3893181818185, 1530.4285714285713, 2791.657142857143, 7044.251761006294, 119083.30612244904, 2430.175312499999, 2635.170422535211, 1684.4418604651166, 2212.9850746268658, 1548.2400000000002, 3498.891803278688, 1187.9148936170213, 2182.772131147541, 2549.1078431372543, 1676.8298245614033, 2421.597872340426, 1638.856603773585, 2096.414634146342, 50122.43538461537, 956.3701754385964, 1765.0, 3711.425, 1395.3830188679246, 57652.03235294117, 86991.15576923077, 162134.55084745763, 1307.751020408163, 42891.4696969697, 796.4612903225808, 1600.688, 1893.1610526315783, 2197.9760869565216, 1499.6951612903226, 24804.167619047625, 285688.75, 154199.7982142857, 887.2456521739131, 1973.430769230769, 1326.135593220339, 2495.78, 190240.23518518519, 80479.5107142857, 188816.5137254902, 133573.88017241374, 344538.6085106385, 1112.6558139534884, 100332.03255813952, 1942.1645161290323, 1551.3358490566036, 2059.0177777777785, 1703.7014285714286, 1890.9244897959184, 2313.357499999999, 2067.451843088418, 1386.388235294118, 3694.379814814815, 3041.042105263158, 1694.591489361702, 1323.4152542372883, 96062.4457627119, 2356.4488372093024, 2248.233333333334, 440066.23111111106, 2911.7670000000007, 199399.32499999998, 1449.685106382979, 2626.05, 72190.26744186049, 948.439827586207, 3514.1, 2209.7180000000003, 3726.4333333333334, 123845.98478260874, 3410.229787234041, 1965.5771929824568, 3630.3545454545456, 2168.5733333333333, 2762.8711538461534, 1931.0155172413793, 1449.2044444444446, 3568.864864864865, 1454.991836734694, 3034.2244897959185, 34609.67000000001, 1703.0358974358974, 2049.456521739131, 2261.631428571429, 89569.08571428573, 2104.0695652173918, 144575.02954545457, 2302.358, 38058.485, 2185.80652173913, 1634.2708333333337, 2087.1255319148936, 2106.0622222222223, 252373.70555555556, 87751.32142857143, 2506.702083333333, 76421.48135593219, 2318.9038461538466, 126245.27551020404, 2494.1238095238095, 3340.35462962963, 4495.078125, 88611.43260869566, 1099.4347826086953, 223636.81960784315, 130570.52173913049, 3480.016326530613, 130761.0, 78443.83928571429, 1280.0710526315788, 129726.66299999996, 116886.95777777777, 2721.5199999999995, 2278.198113207547, 2393.9795918367345, 101969.64285714286, 236761.88888888888, 2566.315789473684, 1292.5897435897436, 60989.623076923075, 2529.483896103896, 1873.566666666667, 2581.630232558139, 2297.818421052631, 2501.241463414635, 60569.3079365079, 1245.614705882353, 2170.44, 2059.7391304347825, 134004.73333333334, 2441.6545454545458, 71594.2181818182, 1970.8594594594592, 2012.6342105263152, 1773.1258064516128, 2200.521276595745, 2001.2941176470583, 3487.904651162791, 2326.782608695652, 2037.2600000000002, 234577.42471910105, 1682.5529411764708, 4200.028000000001, 3091.547826086957, 1721.08125, 1559.0102564102565, 1215.2749999999999, 103037.31086956522, 75319.32916666665, 142265.72062500005, 10253.34307065217, 177523.60338983053, 2179.9025, 1913.5595238095239, 1789.862745098039, 183578.4716666667, 93790.45675675676, 79419.67647058824, 297718.10434782587, 104394.63953488372, 137346.30410958902, 2327.234571428571, 249111.49454545445, 3898.477142857143, 2524.4934782608693, 2696.140000000001, 1883.5555555555552, 2282.3104166666676, 3904.142105263157, 2568.95306122449, 2612.526086956522, 4332.471052631579, 3060.863076923077, 1925.8162162162166, 153935.52424242423, 137661.51395348835, 2292.076000000001, 1432.4, 3375.222222222222, 3623.6717391304346, 61753.83333333334, 2761.2490322580647, 3266.9634146341464, 132695.56842105262, 1745.2542857142855, 24435.517777777775, 3441.1785714285716, 3945.6960000000004, 2773.875, 288221.18367346947, 2013.0356164383559, 1620.907894736842, 1675.5406249999999, 1552.0111111111114, 4146.378571428572, 2038.9491228070176, 106961.68888888888, 4427.991666666669, 3390.793181818181, 1611.290625, 53024.40683760684, 292198.7105263158, 4325.878048780488, 1589.3513513513512, 3184.051282051282, 2480.8833333333328, 2824.5048780487805, 5359.529411764706, 366621.09090909077, 2545.681481481482, 2566.924, 156847.86388888888, 2850.9000000000005, 4260.800000000001, 1951.9566666666665, 3276.839534883721, 2842.294736842106, 3645.2065217391305, 4611.150000000001, 2429.622580645161, 4160.792207792209, 5650.047368421052, 3385.675, 4175.833333333333, 2948.9848484848485, 180197.73076923078, 1083.0358974358974, 2257.474999999999, 186483.228125, 3962.711794871795, 21561.227848101258, 3296.0591836734693, 2201.0689655172414, 2057.8888888888887, 3762.0363636363636, 3505.3125, 1222.5277777777778, 795188.9281249999, 109999.03095238094, 2813.3870967741937, 2027.8749999999995, 3841.568571428572, 4501.021428571429, 2633.940740740741, 161518.28666666665, 3193.25, 1836.9727272727273, 2060.2076923076925, 2096.046341463415, 25397.478125000005, 2446.9618613138678, 2533.6368421052625, 962.9583333333334, 2378.162162162162, 4024.6, 5404.694444444444, 1727.9918918918922, 2518.0702702702706, 76590.0108108108, 144064.15833333333, 3318.4714285714285, 2338.9514285714286, 2245.6549999999993, 2077.612903225806, 6263.1073170731715, 132865.02285714282, 1666.9825, 4400.441025641025, 199815.17666666667, 3037.9973684210527, 1982.7508196721303, 6586.772727272727, 4381.9625, 1897.3172413793104, 2031.8035714285718, 138694.4064516129, 2272.5, 1720.4272727272726, 1384.6966666666667, 5193.203448275863, 1943.3033333333337, 4166.015789473684, 3773.846341463415, 3412.6742857142863, 2543.9316129032254, 256194.6, 4377.235294117647, 1528.381081081081, 2572.7974999999997, 4048.2187499999986, 3795.3035714285716, 3966.913043478261, 3686.9, 3656.3999999999996, 5358.026666666667, 2137.4880952380954, 2813.75, 3196.3857142857137, 4515.203124999999, 4225.5, 109322.16483516483, 262727.840625, 2142.805555555555, 4775.365217391304, 3662.764285714286, 4489.897804878049, 3846.4979166666667, 7831.476923076924, 1023.615, 4093.193548387097, 4066.640945945946, 3941.3062499999996, 6744.125, 6751.16875, 251664.7678571429, 3859.4888888888886, 925.7333333333333, 5109.448648648648, 2590.5027027027027, 363202.0, 2352.734920634921, 2770.1131578947366, 5416.745, 4641.363636363634, 2179.209090909091, 3306.463333333333, 3692.025925925925, 1581.2611111111114, 1379.7129032258065, 8007.076923076923, 3413.785714285714, 4685.165384615384, 955.0764705882352, 4852.540740740741, 3064.697142857143, 5282.236363636364, 259546.92857142855, 4374.882142857144, 3507.3760869565217, 6037.297297297298, 104451.57343749993, 5974.366666666667, 339835.49393939396, 3049.379166666667, 1855.0096774193548, 2138.6937500000004, 2337.2200000000003, 3709.5088235294115, 447347.5269230769, 1749.2714285714283, 33722.227539062485, 5888.457142857143, 3766.1826086956526, 396143.5705882353, 3964.491428571429, 3289.3382352941176, 4251.425806451612, 3107.381481481481, 1825.611111111111, 1583.4260869565219, 3352.433333333334, 2499.4625000000005, 2741.976923076923, 1887.8000000000002, 4599.990000000001, 1480.455882352941, 3512.3055555555557, 6240.571052631579, 3520.0333333333333, 335178.9225806451, 1211.1625000000001, 3175.4666666666667, 3568.796296296296, 2866.535135135135, 5247.451282051285, 2916.527027027028, 2926.753333333333, 4014.475675675676, 2788.3999999999996, 7282.841935483871, 6272.410344827585, 5489.352777777777, 2230.438461538462, 1975.8000000000006, 2903.3026315789475, 4971.970731707316, 85688.77073170731, 193100.34705882354, 2600.8865, 105715.40624999996, 3498.868852459016, 2524.107407407408, 5235.0526315789475, 5814.782857142856, 2604.319512195123, 5683.095348837209, 8592.458333333334, 3657.627272727273, 3685.9444444444443, 3626.2322580645155, 2242.7718309859156, 84629.98378378375, 4126.075000000001, 5884.376000000001, 5097.466666666666, 3019.6511627906975, 3446.809523809524, 3185.051724137931, 3787.318181818182, 4397.296000000001, 3449.1127272727276, 5152.060714285713, 10643.407407407407, 4835.051162790699, 1603.1333333333334, 165232.082, 3209.7192307692308, 6493.45, 4859.953846153847, 109552.5085714286, 3559.609259259259, 2335.7208333333333, 5853.732352941176, 3121.9655172413795, 4644.011428571427, 4211.666666666667, 5376.868571428571, 2539.1242424242423, 2171.805714285714, 3176.78125, 1676.5603448275863, 4329.4541666666655, 1880.0000000000002, 4394.452, 7967.565217391304, 4947.025641025641, 3683.740740740741, 2675.5359999999996, 1969.344444444445, 4240.971875, 2806.279591836735, 2268.0559999999996, 4076.5321428571415, 7336.007692307693, 3859.45, 228736.4375, 3041.784848484848, 1893.715625, 4152.458333333333, 4992.777777777777, 2635.055408970977, 2042.921052631579, 4074.0702702702697, 1533.2612903225806, 2361.0652173913045, 5369.3608695652165, 4586.1552, 2645.6333333333337, 116662.05714285719, 8353.958333333334, 6532.826086956522, 1572.1272727272728, 4723.96, 3485.433333333333, 2291.607142857143, 3980.8205128205127, 7669.465384615386, 5120.069444444444, 7245.994666666667, 4228.466666666665, 3961.3555555555554, 5284.708333333333, 5869.903125, 11144.196153846155, 7418.546153846155, 2521.9656250000003, 1948.1538461538462, 6150.782608695652, 2046.4168965517235, 1736.6241379310343, 2362.302040816327, 2888.6275862068965, 3065.414705882353, 5716.960000000001, 8177.596428571429, 9113.36153846154, 6260.435714285714, 4903.428571428572, 6645.423809523809, 2354.261904761904, 2640.6074999999996, 6257.2519999999995, 7373.07, 6181.566666666666, 1998.9440000000002, 3545.615625, 5922.35294117647, 4076.6875000000005, 3395.735294117647, 2886.3849999999998, 3140.951851851852, 223717.0, 1741.7181818181816, 2051.4241379310347, 324485.7228000001, 220679.58620689655, 5999.852173913044, 239699.79999999996, 7130.407317073171, 3552.0, 2639.7549999999997, 6920.346153846154, 2676.121739130435, 4019.3836363636356, 5913.526315789472, 4719.760606060606, 10847.4375, 4980.2225806451615, 2549.079428571429, 1646.188, 2660.0, 332715.51304347825, 4649.696428571429, 5730.9913043478255, 2137.404761904762, 4539.903225806453, 3249.2531249999997, 5191.576, 2008.2666666666662, 1962.695652173913, 2821.5806451612902, 165889.203125, 132054.36363636365, 4457.842, 2718.782608695652, 5509.293548387098, 2063.835111111111, 3221.6190476190477, 524411.25, 4102.325, 5323.068181818183, 6100.583333333333, 1403.3166666666666, 1440.5055555555555, 1591.2233333333331, 387072.19999999995, 3956.4761904761904, 4131.95652173913, 3548.166666666666, 49585.523809523824,64964.9796477144, 68356.10861649504, 149057.7458134726, 105374.69139596469, 144800.5484045522, 226596.01449438152, 375226.87215898256, 153892.07818679162, 209141.07118356414,683839.2061278762, 1505597.3710096013, 1291620.523364418, 3840524.413283434, 7842953.149114552, 4697966.919100844, 6577449.9646325875, 11974861.09784413, 6937342.331502543,4343384.644552971]

    num=int(area)
    mean_prod=0
    if(int(num)<1000):
        mean_prod=arr[int(num)]
    elif(int(num)<10000):
        more=int(num/1000)
        mean_prod=arr[1000+more]
    elif(int(num)<100000):
        more=int(num/10000)
        mean_prod=arr[1010+more]
    else:
        mean_prod=arr[-1]
    d=0;
    crop_string=""
    if(mean_prod<op+1):
        d=1;
    else:
        object2 = pd.read_pickle(r'./src/components/crop2_model.pkl')

        temp = [[S_name1,dist1,2020,season1,area,mean_prod]]
        best_crop = object2.predict(temp)

        
        i=-1;
        crop_string=""
        for rows in data1["Crop"]:
            i=i+1
            if(rows==int(best_crop)):
                crop_string=data["Crop"][i]
                break
        if(crop_string.capitalize()==crop.capitalize()):
            d=1;
    
    ans={'production':op.tolist(),'IsGood':d,'BestCrop':crop_string}

    return ans

